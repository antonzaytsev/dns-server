# DNS Server Docker Compose Configuration
#
# Uses port 9953 for DNS (non-privileged) and port 9980 for web interface
# No special privileges required
#
# To run:
#   docker-compose up -d --build
#
# To stop:
#   docker-compose down

services:
  dns-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dns-server
    restart: unless-stopped

    # Run as regular user for non-privileged ports
    user: "${UID:-1000}:${GID:-1000}"

    # Use bridge networking with explicit port mapping
    ports:
      - "9953:53/udp"     # DNS UDP (maps host 9953 to container 53)
      - "9953:53/tcp"     # DNS TCP (maps host 9953 to container 53)
      - "9980:80/tcp"     # Web interface (maps host 9980 to container 80)

    # Volume mounts
    volumes:
      - ./:/app


    # Environment variables
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app/src
      - DNS_SERVER_SERVER_BIND_ADDRESS=0.0.0.0
      - DNS_SERVER_SERVER_DNS_PORT=53      # Container internal port
      - DNS_SERVER_SERVER_WEB_PORT=80      # Container internal port

    # Health check
    healthcheck:
      test: ["CMD", "python", "/app/src/dns_server/main.py", "--config", "/app/config/default.yaml", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G        # Increased for better performance
          cpus: '1.5'       # Increased for better performance
        reservations:
          memory: 512M      # Increased reservation
          cpus: '0.75'

    # Security settings
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE    # Not needed for non-privileged ports, but keeping for flexibility

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"    # Larger log files
        max-file: "10"      # More log files
        labels: "service=dns-server"
